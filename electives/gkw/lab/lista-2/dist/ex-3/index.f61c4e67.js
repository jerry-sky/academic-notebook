!function(){class t{constructor(t,e,r){this.x=t,this.y=e,this.z=r}static from(e){return new t(e.x,e.y,e.z)}reset(t){this.x=t?.x||0,this.y=t?.y||0,this.z=t?.z||0}negate(){this.x=-this.x,this.y=-this.y,this.z=-this.z}translate(t){this.x+=t.x,this.y+=t.y,this.z+=t.z}translateY(t){this.y+=t}scale(t){this.x*=t,this.y*=t,this.z*=t}rotateXY(t){const e=Math.sin(t/180*Math.PI),r=Math.cos(t/180*Math.PI),s=this.x*r-this.y*e,a=this.x*e+this.y*r;this.x=s,this.y=a}}class e extends Array{constructor(t){t?super(...t):super(0)}static concatenate(...t){return new e([].concat(...t))}get flatList(){const t=new Array;return this.forEach((e=>{t.push(e.x),t.push(e.y),t.push(e.z)})),t}reset(e){const r=t.from(this[0]);r.negate(),r.translate(e),this.forEach((t=>{t.translate(r)}))}translate(t){this.forEach((e=>{e.translate(t)}))}translateY(t){this.forEach((e=>{e.translateY(t)}))}scale(t){this.forEach((e=>{e.scale(t)}))}rotateXY(t){this.forEach((e=>{e.rotateXY(t)}))}}const r={source:"\nprecision mediump float;\n\nattribute vec3 vertPosition;\n\nvoid main()\n{\n    gl_Position = vec4(vertPosition, 1.0);\n    gl_PointSize = 10.0;\n}\n",attributes:{vertPosition:"vertPosition"}},s={source:"\nprecision mediump float;\n\nuniform vec3 fragColour;\n\nvoid main()\n{\n    gl_FragColor = vec4(fragColour, 1.0);\n}\n",attributes:{},uniforms:{colour:"fragColour"}};const a=document.querySelector("canvas"),n=new class{_shapes=[];addShape(t){return this._shapes.push(t)}get shapes(){return this._shapes}resetShapes(){this._shapes=[]}constructor(t){if(this.canvas=t,this.gl=this.canvas.getContext("webgl"),this.gl||(this.gl=this.canvas.getContext("experimental-webgl")),!this.gl)throw new Error("WebGL not supported");this.DrawTypes={POINTS:this.gl.POINTS,LINES:this.gl.LINES,LINE_STRIP:this.gl.LINE_STRIP,LINE_LOOP:this.gl.LINE_LOOP,TRIANGLES:this.gl.TRIANGLES,TRIANGLE_STRIP:this.gl.TRIANGLE_STRIP,TRIANGLE_FAN:this.gl.TRIANGLE_FAN},this.clearScreen(),this.prepare(),this.gl.lineWidth(5),this.gl.enable(this.gl.DEPTH_TEST)}prepare(){const t=this.gl,e=this.prepareShader(r.source,t.VERTEX_SHADER),a=this.prepareShader(s.source,t.FRAGMENT_SHADER);this.program=this.prepareProgram([e,a])}clearScreen(){this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)}prepareShader(t,e){const r=this.gl,s=r.createShader(e);if(r.shaderSource(s,t),r.compileShader(s),!this.gl.getShaderParameter(s,this.gl.COMPILE_STATUS))throw new Error("Shader compilation error: "+this.gl.getShaderInfoLog(s));return s}prepareProgram(t){const e=this.gl,r=e.createProgram();if(t.forEach((t=>{e.attachShader(r,t)})),e.linkProgram(r),!e.getProgramParameter(r,e.LINK_STATUS))throw new Error("Program linking error: "+this.gl.getProgramInfoLog(r));if(e.validateProgram(r),!e.getProgramParameter(r,e.VALIDATE_STATUS))throw new Error("Program validating error: "+e.getProgramInfoLog(r));return r}startAnimationLoop(){this.clearScreen(),this._shapes.forEach((t=>{this.draw3DUniformColor(t.points,t.drawType,t.colour)})),window.requestAnimationFrame(this.startAnimationLoop.bind(this))}draw3DUniformColor(t,e,a){const n=this.gl,o=n.createBuffer();n.bindBuffer(n.ARRAY_BUFFER,o),n.bufferData(n.ARRAY_BUFFER,new Float32Array(t.flatList),n.STATIC_DRAW);const i=n.getAttribLocation(this.program,r.attributes.vertPosition);n.enableVertexAttribArray(i),n.vertexAttribPointer(i,3,n.FLOAT,!1,3*Float32Array.BYTES_PER_ELEMENT,0),n.useProgram(this.program);const h=n.getUniformLocation(this.program,s.uniforms.colour);n.uniform3fv(h,new Float32Array(a)),n.drawArrays(e,0,t.length)}}(a);n.startAnimationLoop(),n.addShape({colour:[.5,.5,.5],drawType:n.DrawTypes.LINE_LOOP,points:new e([new t(-1,-1,-.5),new t(-1,1,-.5),new t(1,1,-.5),new t(1,-1,-.5)])}),n.addShape({colour:[1,0,0],drawType:n.DrawTypes.TRIANGLE_FAN,points:new e([new t(-1,.7,-.4),new t(1,.7,-.4),new t(.5,.4,-.4),new t(-.5,.4,-.4)])});const o=.9;n.addShape({colour:[.4,0,.8],drawType:n.DrawTypes.LINE_LOOP,points:new e([new t(o,-.9,-.6),new t(o,o,-.6),new t(-.9,o,-.6),new t(-.9,-.9,-.6)])});const i=.01,h={colour:[1,1,1],drawType:n.DrawTypes.TRIANGLE_FAN,points:new e([new t(0,0,0),new t(0,.1,0),new t(i,.1,0),new t(i,0,0)])};n.addShape(h),h.points.translate(new t(0,-2,.1));const l=.15,c={colour:[1,0,1],drawType:n.DrawTypes.TRIANGLE_FAN,points:new e([new t(0,0,0),new t(0,l,0),new t(l,l,0),new t(l,0,0)])};n.addShape(c),c.points.translate(new t(0,-1,0));const p=1/8,w=.08,g=[];for(let r=0;r<16;r++){const s={colour:[0,1,0],drawType:n.DrawTypes.TRIANGLE_FAN,points:new e([new t(0,0,0),new t(0,w,0),new t(p,w,0),new t(p,0,0)])};g.push(s),n.addShape(s);const a=Math.floor(r/8);s.points.translate(new t((r-8*a)*p*2-1+.0625,a*w*1.2,0))}let u=!1;let d=0,f=performance.now();!function t(e){const r=e-f;if(f=e,u){h.points.translateY(.001*r),h.points[0].y>1&&(u=!1);const t=h.points[1];for(const e of g){const r=e.points[0];if(r.y<=t.y&&r.x<=t.x&&r.x+p>=t.x){u=!1,e.points.translateY(2),h.points.translateY(2),d++,16===d&&alert("Level cleared, restart the page to play again.");break}}}window.requestAnimationFrame(t)}(performance.now()),window.addEventListener("keydown",(e=>{switch(e.key){case"ArrowLeft":c.points.translate(new t(-.1,0,0));break;case"ArrowRight":c.points.translate(new t(.1,0,0));break;case" ":const e=t.from(c.points[1]);e.translate(new t(.075-.005,0,.1)),h.points.reset(e),u=!0}}))}();
//# sourceMappingURL=index.f61c4e67.js.map
